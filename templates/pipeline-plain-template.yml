kind: Template
apiVersion: v1
metadata:
  annotations:
    description: Jenkins pipeline template for git-hosted jenkinsfile
    tags: instant-app,jenkins,jenkinsfile,git
  name: jenkins-pipeline-git
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
  name: ${PIPELINE_NAME}
  labels:
      name: ${PIPELINE_NAME}
  annotations:
      pipeline.alpha.openshift.io/uses: '[{"name": "jenkins", "namespace": "", "kind": "DeploymentConfig"}]'
  spec:
    triggers:
      - type: GitHub
        github:
          secret: ${GITHUB_SECRET}
      - type: Generic
        generic:
          secret: ${GENERIC_SECRET}
    runPolicy: Serial
    source:
      git:
        uri: ${GIT_PIPELINE_URL}
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: >
          node("maven"){
              stage('Build App Image') {
                openshiftBuild(namespace: 'cicd-dev', buildConfig: 'myapp', showBuildLogs: 'true')
              }
              
              stage('Deploy Dev') {
                openshiftDeploy(namespace: 'cicd-dev', deploymentConfig: 'myapp')
              }
              
              stage('Deploy Stage') {
                input 'Souhaitez-vous d√©ployer l\'application dans l\'environnement stage ?'
                openshiftTag(namespace: 'cicd-dev', sourceStream: 'myapp',sourceTag: 'latest', destinationStream: 'myapp', destinationTag:'stageReady')
                openshiftDeploy(namespace: 'cicd-stage', deploymentConfig: 'myapp')
              }
          }
      type: JenkinsPipeline
  output: {}
  resources: {}
  postCommit: {}
parameters:
- description: Jenkins pipeline name
  name: PIPELINE_NAME
  value: my-pipeline
- description: Github secret value
  name: GITHUB_SECRET
  value: github-secret
- description: Generic secret value
  name: GENERIC_SECRET
  value: generic-secret
